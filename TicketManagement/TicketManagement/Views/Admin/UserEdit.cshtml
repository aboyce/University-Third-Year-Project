@using Microsoft.AspNet.Identity
@using TicketManagement.Controllers
@using TicketManagement.Models.Entities
@using TicketManagement.ViewModels
@model TicketManagement.Models.Entities.User

@{
    ViewBag.Title = "User Edit";
    Layout = "~/Views/Shared/_Layout_Standard.cshtml";
    const string isChecked = "checked=checked";
    AdminController controller = ViewContext.Controller as AdminController;
}

@if (Request.Params["ViewMessage"] == "RoleAdded")
{
    <div class="alert alert-success alert-dismissable" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <b>Success</b> The role has been added.
    </div>
}

@if (Request.Params["ViewMessage"] == "RoleNotAdded")
{
    <div class="alert alert-danger alert-dismissable" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <b>Error</b> The role has not been added.
    </div>
}

@if (Request.Params["ViewMessage"] == "AlreadyInRole")
{
    <div class="alert alert-warning alert-dismissable" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <b>Warning</b> The role has not been added as the user was already in the role.
    </div>
}

@if (Request.Params["ViewMessage"] == "RoleRemoved")
{
    <div class="alert alert-success alert-dismissable" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <b>Success</b> The role has been removed.
    </div>
}

@if (Request.Params["ViewMessage"] == "RoleNotRemoved")
{
    <div class="alert alert-danger alert-dismissable" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <b>Error</b> The role has not been removed.
    </div>
}

@if (Request.Params["ViewMessage"] == "NotInRole")
{
    <div class="alert alert-warning alert-dismissable" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <b>Warning</b> The role has not been removed as the user was not in the role.
    </div>
}

<h2>Admin Panel</h2>
<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Edit - User</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.PasswordHash)
        @Html.HiddenFor(model => model.SecurityStamp)
        @Html.HiddenFor(model => model.EmailConfirmed)
        @Html.HiddenFor(model => model.PhoneNumberConfirmed)
        @Html.HiddenFor(model => model.TwoFactorEnabled)
        @Html.HiddenFor(model => model.LockoutEndDateUtc)
        @Html.HiddenFor(model => model.LockoutEnabled)
        @Html.HiddenFor(model => model.AccessFailedCount)

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.EditorFor(model => model, new { Admin = User.IsInRole("Administrator") })

        <div class="form-group">
            <label class="control-label col-md-4">Is Approved</label>
            <div class="col-md-6">
                <input class="check-box" disabled="disabled" type="checkbox" @( @controller.UserManager.IsInRole(Model.Id, "Approved") ? isChecked : "")>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-4">Is Admin</label>
            <div class="col-md-6">
                <input class="check-box" disabled="disabled" type="checkbox" @( @controller.UserManager.IsInRole(Model.Id, "Administrator") ? isChecked : "")>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-4">Is Internal</label>
            <div class="col-md-6">
                <input class="check-box" disabled="disabled" type="checkbox" @( @controller.UserManager.IsInRole(Model.Id, "Internal") ? isChecked : "")>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-4">Is Social</label>
            <div class="col-md-6">
                <input class="check-box" disabled="disabled" type="checkbox" @( @controller.UserManager.IsInRole(Model.Id, "Social") ? isChecked : "")>
            </div>
        </div>
        
        <div class="form-group">
            <label class="control-label col-md-4">Can Send Text Messages</label>
            <div class="col-md-6">
                <input class="check-box" disabled="disabled" type="checkbox" @( @controller.UserManager.IsInRole(Model.Id, "TextMessage") ? isChecked : "")>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-4 col-md-6">
                <input type="submit" value="Save" class="btn btn-default" />
                @Html.ActionLink("Cancel", "Users", null, new { @class = "btn btn-danger" })
            </div>
        </div>
    </div>
}

@Html.Partial("_Partial_AddRole", new AddRemoveRoleViewmodel { UserId = Model.Id })

@Html.Partial("_Partial_RemoveRole", new AddRemoveRoleViewmodel { UserId = Model.Id })

<br/>