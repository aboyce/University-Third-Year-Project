@model TicketManagement.ViewModels.ManageLoginsViewModel
@{
    ViewBag.Title = "External Logins";
}

@if (Request.Params["ViewMessage"] == "ClearedExternalLoginInformation")
{
    <div class="alert alert-warning alert-dismissable" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <b>Success</b> Your user information for external logins should have cleared.
    </div>
}

@if (Request.Params["ViewMessage"] == "ErrorWithTwitterAuthentication")
{
    <div class="alert alert-danger alert-dismissable" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <b>Error</b> An error occurred trying to contact Twitter, please try again later.
    </div>
}

<br />
<h2>My Account</h2>

@{
    if (Model.FacebookToConfigure == null && Model.FacebookConfigured == null && !Model.TwitterEnabled)
    {
        <div>
            <p>
                There are no external accounts services configured. Please check the configuration to correctly set up external accounts.
            </p>
        </div>
    }
    else
    {
        <h3>Current External Logins</h3>
        <hr />

        if (Model.FacebookConfigured != null)
        {
            <div class="row">
                <div class="col-md-2 col-xs-2">
                    @Model.FacebookConfigured.LoginProvider
                </div>
                <div class="col-md-4 col-xs-4">

                    @using (Html.BeginForm("RemoveLogin", "User"))
                    {
                        @Html.AntiForgeryToken()
                        <div>
                            @Html.Hidden("loginProvider", Model.FacebookConfigured.LoginProvider)
                            @Html.Hidden("providerKey", Model.FacebookConfigured.ProviderKey)
                            <input type="submit" class="btn btn-danger" value="Remove" title="Remove this @Model.FacebookConfigured.LoginProvider login from your account" />
                        </div>
                    }
                </div>
            </div>
            <br />
        }
        if (Model.TwitterConfigured)
        {
            <div class="row">
                <div class="col-md-2 col-xs-2">
                    Twitter
                </div>
                <div class="col-md-4 col-xs-4">
                    @Html.ActionLink("Remove", "RemoveTwitterAuthentication", "User", null, new { @class = "btn btn-danger" })
                </div>
            </div>
        }
        else if (Model.FacebookConfigured == null)
        {
            <p>There are currently no external accounts associated with your account</p>
        }

        <h3>Add New Login</h3>
        <hr />

        if (Model.FacebookToConfigure != null)
        {
            using (Html.BeginForm("LinkLogin", "User"))
            {
                @Html.AntiForgeryToken()
                <div id="socialLoginList">
                    <p>
                        <button type="submit" class="btn btn-success" id="@Model.FacebookToConfigure.AuthenticationType" name="provider" value="@Model.FacebookToConfigure.AuthenticationType" title="Log in using your @Model.FacebookToConfigure.Caption account">@Model.FacebookToConfigure.AuthenticationType</button>
                    </p>
                </div>
            }
        }
        if (Model.TwitterConfigured == false)
        {
            <p>@Html.ActionLink("Twitter", "AuthenticateTwitter", "User", null, new { @class = "btn btn-success" })</p>
        }
        else if (Model.FacebookToConfigure == null)
        {
            <p>There are currently no other external accounts to link to your account</p>
        }
    }
}

<br />
<h3>Clear External Account Information</h3>
<hr />
@Html.ActionLink("Clear", "RemoveExternalLoginInformation", "User", null, new { @class = "btn btn-danger" })