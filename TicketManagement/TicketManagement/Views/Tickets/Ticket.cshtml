@using TicketManagement.Models.Entities
@using TicketManagement.Models.Management
@using TicketManagement.ViewModels
@model TicketViewModel

@{
    ViewBag.Title = "Ticket";
    string panelColour = "panel-";
}

@if (Request.Params["ViewMessage"] == "TicketMessageAdded")
{
    <div class="alert alert-success alert-dismissable" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <b>Success</b> Your message has been sent.
    </div>
}

@if (Request.Params["ViewMessage"] == "TicketFileAdded")
{
    <div class="alert alert-success alert-dismissable" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <b>Success</b> Your file has been sent.
    </div>
}

@if (Request.Params["ViewMessage"] == "TicketFileNotAdded")
{
    <div class="alert alert-danger alert-dismissable" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <b>Error</b> Your file could not be sent.
    </div>
}

@switch (Request.Params["PanelType"])
{
    case "danger":
        panelColour += "danger";
        break;
    case "success":
        panelColour += "success";
        break;
    case "info":
        panelColour += "info";
        break;
    case "warning":
    default:
        panelColour += "warning";
        break;
}

<h2>Tickets</h2>
<hr />

<div class="panel @panelColour">
    <div class="panel-body">
        <div class="container">
            <div class="row">
                <div class="col-md-3">
                    <strong>@Html.DisplayNameFor(model => model.Ticket.Title): </strong>
                    @Html.DisplayFor(model => model.Ticket.Title)
                </div>
                <div class="col-md-6">
                    <strong>@Html.DisplayNameFor(model => model.Ticket.Description): </strong>
                    @Html.DisplayFor(model => model.Ticket.Description)
                </div>
                <div class="col-md-3">
                    <strong>@Html.DisplayNameFor(model => model.Ticket.Created): </strong>
                    @Html.DisplayFor(model => model.Ticket.Created)
                </div>
            </div>
            <div class="row">
                <div class="col-md-3">
                    <strong>State: </strong>
                    @Html.DisplayFor(model => model.Ticket.TicketState.Name)
                </div>
                <div class="col-md-3">
                    <strong>Priority: </strong>
                    @Html.DisplayFor(model => model.Ticket.TicketPriority.Name)
                </div>
                <div class="col-md-3">
                    <strong>Category: </strong>
                    @Html.DisplayFor(model => model.Ticket.TicketCategory.Name)
                </div>
            </div>
            <div class="row">
                <div class="col-md-3">
                    <strong>Assigned to: </strong>
                    @Html.DisplayFor(model => model.Ticket.UserAssignedTo.FullName)
                </div>
                <div class="col-md-3">
                    <strong>Team: </strong>
                    @Html.DisplayFor(model => model.Ticket.TeamAssignedTo.Name)
                </div>
                <div class="col-md-3">
                    <strong>Project: </strong>
                    @Html.DisplayFor(model => model.Ticket.Project.Name)
                </div>
                <div class="col-md-3">
                    <strong>Organisation: </strong>
                    @Html.DisplayFor(model => model.Ticket.OrganisationAssignedTo.Name)
                </div>
            </div>
            <div class="row">
                <div class="col-md-3">
                    <strong>Opened By: </strong>
                    @Html.DisplayFor(model => model.Ticket.OpenedBy.FullName)
                </div>
                <div class="col-md-3">
                    <strong>Deadline: </strong>
                    @Html.DisplayFor(model => model.Ticket.Deadline)
                </div>
                <div class="col-md-3">
                    <strong>Last Message: </strong>
                    @Html.DisplayFor(model => model.Ticket.LastMessage)
                </div>
                <div class="col-md-3">
                    <strong>Last Response: </strong>
                    @Html.DisplayFor(model => model.Ticket.LastResponse)
                </div>
            </div>
        </div>
    </div>
</div>

@Html.ValidationSummary(true, "", new { @class = "text-danger" })

@foreach (TicketLog ticketLog in Model.TicketLogs)
{
    <div class="panel panel-@(ticketLog.IsInternal ? "info" : "primary")">
        <div class="panel-heading">
            <strong>@ticketLog.TicketLogType</strong>
            @(ticketLog.File != null ? $" - ({@ticketLog.File.FileType}) {@ticketLog.File.FileName}" : "")
            <div style="float: right">
                @ticketLog.SubmittedByUser.FullName @@ @ticketLog.TimeOfLog
            </div>
        </div>
        <div class="panel-body">
            @if (ticketLog.TicketLogType == TicketLogType.Message)
            {
                @ticketLog.Message
            }
            else if (ticketLog.TicketLogType == TicketLogType.File)
            {
                if (ticketLog.File != null/* && ticketLog.File.FileType == FileType.Image*/)
                {
                    <strong><a href="~/File?id=@ticketLog.File.Id" target="blank">Preview</a></strong>
                }
            }
        </div>
    </div>
}

@Html.Partial("_Partial_NewTicketLog", new NewTicketLogViewModel { TicketId = Model.Ticket.Id })