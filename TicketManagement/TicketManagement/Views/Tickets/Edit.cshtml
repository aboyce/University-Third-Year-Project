@using TicketManagement.Models.Management
@model TicketManagement.Models.Entities.Ticket

@Styles.Render("~/bundles/bootstrap_datepicker_css")

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Ticket</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OpenedById, "Opened By", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OpenedBy.FullName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.OpenedById, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (User.IsInRole(MyRoles.Internal))
        {
            <div class="form-group">
                @Html.LabelFor(model => model.TicketPriorityId, "Ticket Priority", htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.DropDownList("TicketPriorityId", null, htmlAttributes: new {@class = "form-control"})
                    @Html.ValidationMessageFor(model => model.TicketPriorityId, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserAssignedToId, "User Assigned To", htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.DropDownList("UserAssignedToId", null, htmlAttributes: new {@class = "form-control"})
                    @Html.ValidationMessageFor(model => model.UserAssignedToId, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TeamAssignedToId, "Team", htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.DropDownList("TeamAssignedToId", null, htmlAttributes: new {@class = "form-control"})
                    @Html.ValidationMessageFor(model => model.TeamAssignedToId, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OrganisationAssignedToId, "Organisation", htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.DropDownList("OrganisationAssignedToId", null, htmlAttributes: new {@class = "form-control"})
                    @Html.ValidationMessageFor(model => model.OrganisationAssignedToId, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TicketStateId, "Ticket State", htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.DropDownList("TicketStateId", null, htmlAttributes: new {@class = "form-control"})
                    @Html.ValidationMessageFor(model => model.TicketStateId, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ProjectId, "Project", htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.DropDownList("ProjectId", null, htmlAttributes: new {@class = "form-control"})
                    @Html.ValidationMessageFor(model => model.ProjectId, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TicketCategoryId, "Ticket Category", htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.DropDownList("TicketCategoryId", null, htmlAttributes: new {@class = "form-control"})
                    @Html.ValidationMessageFor(model => model.TicketCategoryId, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Deadline, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    <input name="deadlineString" type="text" class="form-control datepicker" value="@Model.Deadline"/>
                    @Html.ValidationMessageFor(model => model.Deadline, "", new {@class = "text-danger"})
                </div>
            </div>
        }
        else
        {
            @Html.HiddenFor(model => model.TicketPriority)
            @Html.HiddenFor(model => model.TicketPriorityId)
            @Html.HiddenFor(model => model.UserAssignedTo)
            @Html.HiddenFor(model => model.UserAssignedToId)
            @Html.HiddenFor(model => model.TeamAssignedTo)
            @Html.HiddenFor(model => model.TeamAssignedToId)
            @Html.HiddenFor(model => model.OrganisationAssignedTo)
            @Html.HiddenFor(model => model.OrganisationAssignedToId)
            @Html.HiddenFor(model => model.TicketState)
            @Html.HiddenFor(model => model.TicketStateId)
            @Html.HiddenFor(model => model.Project)
            @Html.HiddenFor(model => model.ProjectId)
            @Html.HiddenFor(model => model.TicketCategory)
            @Html.HiddenFor(model => model.TicketCategoryId)
            @Html.HiddenFor(model => model.Deadline)
        }

        <div class="form-group">
            @Html.LabelFor(model => model.LastMessage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastMessage, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.LastMessage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastResponse, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastResponse, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.LastResponse, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.HiddenFor(model => model.OpenedById)

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/bootstrap_datepicker_js")
    @Scripts.Render("~/Scripts/Site/Shared/date_picker.js")
}
