@using TicketManagement.Helpers
@using TicketManagement.Management

@model IEnumerable<TicketManagement.Models.Entities.Ticket>

@Styles.Render("~/Content/Custom/Shared/table_popover.css")

@{
    ViewBag.Title = "Tickets";
    Layout = "~/Views/Shared/_Layout_Standard.cshtml";

    TicketConfiguration ticketConfiguration = ConfigurationHelper.GetTicketConfiguration();
    var now = DateTime.Now;
    string rowColour = string.Empty;
}

@if (Request.Params["ViewMessage"] == "ProfileUpdated")
{
    <div class="alert alert-success alert-dismissable" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <b>Success</b> Your profile has been updated.
    </div>
}

@if (Request.Params["FacebookError"] == "Exception")
{
    <div class="alert alert-danger alert-dismissable" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <b>Exception</b> An error occurred whilst processing your request: @Request.Params["Message"]
    </div>
}

<h2>Tickets</h2>
<hr />

<div>
    <ul id="ticketSortTabs" class="nav nav-tabs" role="tablist">
        <li>@Html.ActionLink("Open", "Index", "Tickets", new {sort = TicketSort.Open}, new {id = TicketSort.Open})</li>
        <li>@Html.ActionLink("Closed", "Index", "Tickets", new {sort = TicketSort.Closed}, new {id = TicketSort.Closed})</li>
        <li>@Html.ActionLink("Unanswered", "Index", "Tickets", new {sort = TicketSort.Unanswered}, new {id = TicketSort.Unanswered})</li>
        <li>@Html.ActionLink("Pending Approval", "Index", "Tickets", new {sort = TicketSort.PendingApproval}, new {id = TicketSort.PendingApproval})</li>
        @if (User.IsInRole(MyRoles.Internal))
        {
            <li>@Html.ActionLink("Mine", "Index", "Tickets", new {sort = TicketSort.Mine}, new {id = TicketSort.Mine})</li>
        }
        <li>@Html.ActionLink("All", "Index", "Tickets", new {sort = TicketSort.All}, new {id = TicketSort.All})</li>
    </ul>
</div>

<table class="table table-hover table-striped table-responsive">
    <tr>
        <th> Id </th>
        <th> Category </th>
        <th> Priority </th>
        <th> Title </th>
        <th> Team </th>
        <th> Organisation </th>
        <th> State </th>
        <th> More </th>
        <th> </th>
    </tr>

    @foreach (var item in Model)
    {
        if (ticketConfiguration != null)
        {
            if(item.TicketState.Name == "Closed") { rowColour = "active"; }
            else if(item.TicketState.Name == "Open") { rowColour = "success"; }
            else if (item.LastMessage != null && (now - item.LastMessage.Value).Duration() >= ticketConfiguration.TimeSpanRed) { rowColour = "danger"; }
            else if (item.LastMessage != null && (now - item.LastMessage.Value).Duration() >= ticketConfiguration.TimeSpanAmber) { rowColour = "warning"; }
            else { rowColour = "info"; }
        }

        <tr class="clickable-row @rowColour" data-url="/Tickets/Ticket/@item.Id?PanelType=@rowColour">
            <td> @Html.DisplayFor(modelItem => item.Id) </td>
            <td> @Html.DisplayFor(modelItem => item.TicketCategory.Name) </td>
            <td> @Html.DisplayFor(modelItem => item.TicketPriority.Name) </td>
            <td> @Html.DisplayFor(modelItem => item.Title) </td>
            <td> @Html.DisplayFor(modelItem => item.TeamAssignedTo.Name) </td>
            <td> @Html.DisplayFor(modelItem => item.OrganisationAssignedTo.Name) </td>
            <td> @Html.DisplayFor(modelItem => item.TicketState.Name) </td>
            <td>
                <a data-toggle="popover" data-placement="left"
                   title="<strong>User Information</strong>" data-content-target="#popover_content_users_@Html.DisplayFor(modelItem => item.Id)"><i class="fa fa-user" style="font-size: 20px;"></i></a>

                <div class="popover" id="popover_content_users_@Html.DisplayFor(modelItem => item.Id)">
                    <table class="table">
                        <tr>
                            <th> Opened By </th>
                            <th> Assigned To </th>
                        </tr>
                        <tr>
                            <td> @Html.DisplayFor(modelItem => item.OpenedBy.FullName) </td>
                            <td> @Html.DisplayFor(modelItem => item.UserAssignedTo.FullName) </td>
                        </tr>
                    </table>
                </div>

                <a data-toggle="popover" data-placement="left"
                   title="<strong>General Information</strong>" data-content-target="#popover_content_general_@Html.DisplayFor(modelItem => item.Id)"><i class="fa fa-info-circle" style="font-size: 20px;"></i></a>

                <div class="popover" id="popover_content_general_@Html.DisplayFor(modelItem => item.Id)">
                    <table class="table">
                        <tr>
                            <th> Project </th>
                            <th> @Html.DisplayNameFor(model => model.Description) </th>
                        </tr>
                        <tr>
                            <td> @Html.DisplayFor(modelItem => item.Project.Name) </td>
                            <td> @Html.DisplayFor(modelItem => item.Description) </td>
                        </tr>
                    </table>
                </div>

                <a data-toggle="popover" data-placement="left"
                   title="<strong>Date Information</strong>" data-content-target="#popover_content_dates_@Html.DisplayFor(modelItem => item.Id)"><i class="fa fa-calendar" style="font-size: 20px;"></i></a>

                <div class="popover" id="popover_content_dates_@Html.DisplayFor(modelItem => item.Id)">
                    <table class="table">
                        <tr>
                            <th> @Html.DisplayNameFor(model => model.Created)</th>
                            <th> @Html.DisplayNameFor(model => model.Deadline) </th>
                            <th> @Html.DisplayNameFor(model => model.LastMessage) </th>
                            <th> @Html.DisplayNameFor(model => model.LastResponse) </th>
                            <th> @Html.DisplayNameFor(model => model.LastUpdated) </th>
                        </tr>
                        <tr>
                            <td> @Html.DisplayFor(modelItem => item.Created) </td>
                            <td> @Html.DisplayFor(modelItem => item.Deadline) </td>
                            <td> @Html.DisplayFor(modelItem => item.LastMessage) </td>
                            <td> @Html.DisplayFor(modelItem => item.LastResponse) </td>
                            <td> @Html.DisplayFor(modelItem => item.LastUpdated) </td>
                        </tr>
                    </table>
                </div>

                <a href="@Url.Action("Edit", new {id = item.Id})"><i class="fa fa-pencil" style="font-size: 20px;"></i></a>
            </td>
            @*<td>
                    <a href="@Url.Action("Edit", new {id = item.Id})"><i class="fa fa-pencil"></i></a> |
                    <a href="@Url.Action("Details", new {id = item.Id})"><i class="fa fa-info-circle"></i></a> |
                    <a href="@Url.Action("Delete", new {id = item.Id})"><i class="fa fa-trash"></i></a>
                </td>*@
        </tr>
    }

</table>

<p>
    @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-success" })
</p>


@Scripts.Render("/Scripts/Site/Shared/table_popover.js")
@Scripts.Render("~/bundles/bootstrap_toggle_js")
@Scripts.Render("/Scripts/Site/Ticket/ticket.js")