@model TicketManagement.Models.Entities.UserExtra

@using (Html.BeginForm())
{
    bool isAdmin = (bool) ViewData["Admin"];
    string archived = @Model.IsArchived ? "checked=\"checked\"" : string.Empty;
    string teamLeader = @Model.IsTeamLeader ? "checked=\"checked\"" : string.Empty;

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.ApplicationUserId)
        @Html.HiddenFor(model => model.Created)
        @Html.HiddenFor(model => model.LastUpdated)

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (isAdmin)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.IsArchived, htmlAttributes: new {@class = "control-label col-md-4"})
                <div class="col-md-6">
                        @Html.EditorFor(model => model.IsArchived)
                        @Html.ValidationMessageFor(model => model.IsArchived, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IsTeamLeader, htmlAttributes: new {@class = "control-label col-md-4"})
                <div class="col-md-6">
                        @Html.EditorFor(model => model.IsTeamLeader)
                        @Html.ValidationMessageFor(model => model.IsTeamLeader, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Team, "Team", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-6">
                    @Html.DropDownList("Teams", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Team, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else
        {
            <div class="form-group">
                @Html.LabelFor(model => model.IsArchived, htmlAttributes: new {@class = "control-label col-md-4"})
                <div class="col-md-6">
                    <input class="check-box" @archived disabled="disabled" type="checkbox">
                    @Html.ValidationMessageFor(model => model.IsArchived, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IsTeamLeader, htmlAttributes: new {@class = "control-label col-md-4"})
                <div class="col-md-6">
                    <input class="check-box" @teamLeader disabled="disabled" type="checkbox">
                    @Html.ValidationMessageFor(model => model.IsTeamLeader, "", new {@class = "text-danger"})
                </div>
            </div>

            if (Model.Team != null)
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.Team.Name, "Team", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-6">
                        <input class="form-control" type="text" placeholder="@Model.Team.Name" disabled="disabled">
                        @Html.ValidationMessageFor(model => model.Team.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
            else
            {
                <div class="form-group">
                    <label class="control-label col-md-4">Team Assigned</label>
                    <div class="col-md-6">
                        <input class="check-box" disabled="disabled" type="checkbox">
                    </div>
                </div>
            }
        }

    </div>
}
<br/>